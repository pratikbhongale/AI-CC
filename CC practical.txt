Shravani

Percentage

Decimal denominator = 300; // Denominator value Decimal maths = 70;
Decimal physics =54; Decimal chemistry = 88;
Decimal numerator = maths+physics+chemistry;
Decimal percentage = (numerator / denominator) * 100;
// Output the percentage value
System.debug('Percentage: ' + percentage);

Apex class
public class PercentageCalculatorController { public Decimal subject1 { get; set; }
public Decimal subject2 { get; set; } public Decimal subject3 { get; set; } public Decimal percentage { get; set; } public Boolean showResult { get; set; }

public void calculatePercentage() { showResult = true;
Decimal totalMarks = subject1 + subject2 + subject3; percentage = (totalMarks / 300) * 100;
}
}
Visualforce
<apex:page controller="PercentageCalculatorController">
<apex:form>
<apex:pageBlock title="Percentage Calculator">
<apex:pageBlockSection>

<apex:inputText value="{!subject1}" label="Subject 1"/>
<apex:inputText value="{!subject2}" label="Subject 2"/>
<apex:inputText value="{!subject3}" label="Subject 3"/>
       <apex:commandButton value="Calculate" action="{!calculatePercentage}" rerender="resultPanel"/>
</apex:pageBlockSection>
</apex:pageBlock>


<apex:outputPanel id="resultPanel">
<apex:outputText value="Percentage: {!percentage}" rendered="{!showResult}"/>
</apex:outputPanel>
</apex:form>
</apex:page>


Calculator
Decimal num1 = 10; Decimal num2 = 5;
Decimal sum = num1+num2; System.debug('Sum: ' + sum);
Decimal difference = num1-num2;
System.debug('Difference: ' + difference); Decimal multiplication = num1*num2; System.debug('Product: ' + multiplication); Decimal division = num1/num2;
System.debug('Quotient: ' + division);



Apex class

public class CalculatorController { public Decimal operand1 { get; set; } public Decimal operand2 { get; set; } public String operator { get; set; } public Decimal result { get; set; }
public Boolean showResult { get; set; }


public List<SelectOption> getOperators() {
List<SelectOption> options = new List<SelectOption>(); options.add(new SelectOption('+', 'Add')); options.add(new SelectOption('-', 'Subtract')); options.add(new SelectOption('*', 'Multiply')); options.add(new SelectOption('/', 'Divide'));
return options;
}


public void calculate() { showResult = true;
if (operator == '+') {
result = operand1 + operand2;
} else if (operator == '-') {
result = operand1 - operand2;
} else if (operator == '*') {
result = operand1 * operand2;
} else if (operator == '/') { if (operand2 != 0) {
result = operand1 / operand2;
} else {
       ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR, 'Division by zero is not allowed.'));
showResult = false;

}

}

}

}
Visualforce page
<apex:page controller="CalculatorController">
<apex:form>
<apex:pageBlock title="Calculator">
<apex:pageBlockSection>
<apex:inputText value="{!operand1}" label="Operand 1"/>
<apex:inputText value="{!operand2}" label="Operand 2"/>
<apex:selectList value="{!operator}" size="1">
<apex:selectOptions value="{!operators}"/>
</apex:selectList>
<apex:commandButton value="Calculate" action="{!calculate}" rerender="resultPanel"/>
</apex:pageBlockSection>
</apex:pageBlock>


<apex:outputPanel id="resultPanel">
<apex:outputText value="Result: {!result}" rendered="{!showResult}"/>
</apex:outputPanel>
</apex:form>
</apex:page>


Celsius to Fahrenheit

Decimal c = 27; // Celsius temperature to convert System.debug('Fahrenheit: ' + ( c * 9/5) + 32);


Apex class
public class TemperatureConverterController {

public Decimal celsius { get; set; } public Decimal fahrenheit { get; set; } public Boolean showResult { get; set; }

public void convertTemperature() { showResult = true;
fahrenheit = (celsius * 9 / 5) + 32;
}

}
Visual page
<apex:page controller="TemperatureConverterController">
<apex:form>
<apex:pageBlock title="Temperature Converter">
<apex:pageBlockSection>
<apex:inputText value="{!celsius}" label="Celsius"/>
       <apex:commandButton value="Convert" action="{!convertTemperature}" rerender="resultPanel"/>
</apex:pageBlockSection>
</apex:pageBlock>


<apex:outputPanel id="resultPanel">
<apex:outputText value="Fahrenheit: {!fahrenheit}" rendered="{!showResult}"/>
</apex:outputPanel>
</apex:form>
</apex:page>


Multiple choice

Visualforce page :
<apex:page controller="MultipleChoiceQuestionController">

<apex:form>
<apex:pageBlock title="Multiple Choice Question">
<apex:pageBlockSection>
<apex:outputText value="Question: {!currentQuestion.questionText}" />


<apex:selectRadio value="{!selectedAnswer}">
<apex:selectOptions value="{!answerOptions}" />
</apex:selectRadio>


<apex:commandButton value="Submit" action="{!submitAnswer}" />
</apex:pageBlockSection>
</apex:pageBlock>
</apex:form>
</apex:page>
Apex class :
public class MultipleChoiceQuestionController { public Question currentQuestion { get; set; } public String selectedAnswer { get; set; }

public MultipleChoiceQuestionController() { currentQuestion = new Question();
currentQuestion.questionText = 'What is the capital of France?'; currentQuestion.answerOptions = new List<SelectOption>();
currentQuestion.answerOptions.add(new SelectOption('A', 'Paris')); currentQuestion.answerOptions.add(new SelectOption('B', 'London')); currentQuestion.answerOptions.add(new SelectOption('C', 'Berlin')); currentQuestion.answerOptions.add(new SelectOption('D', 'Madrid'));
}


public List<SelectOption> getAnswerOptions() { return currentQuestion.answerOptions;

}


public PageReference submitAnswer() {
// Process the selected answer
    // You can add your logic here to validate the selected answer or perform any other actions based on it.


// Redirect to another page or perform any necessary operations after submitting the answer.
    // You can define the logic to determine the next question or action based on your requirements.


return null; // Return the PageReference for the next page or null if no redirection is needed.
}


public class Question {
public String questionText { get; set; }
public List<SelectOption> answerOptions { get; set; }
}
}

